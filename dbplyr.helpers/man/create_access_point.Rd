% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_dbplyr_connect.R
\name{create_access_point}
\alias{create_access_point}
\title{Access remote table}
\usage{
create_access_point(db_connection, db = "[]", schema = "[]", tbl_name)
}
\arguments{
\item{db_connection}{the open connection to close.
Often created using \code{DBI::dbConnect}.}

\item{db}{the name of the database. Can be different from the database used
when creating \code{db_connection} but must be on the same server. Warns if not
delimited in square brackets.}

\item{schema}{the name of the schema containing the Table or View. Warns if
not delimited in square brackets.}

\item{tbl_name}{the name of the Table or View in SQL. Warns is not delimited
in square brackets.

If your table does not exist you will receive an error.
If you do not have permission to access all the table columns you will
receive an error. In this case, the recommended solution is to create a View
that only selects the columns you have permissions for.}
}
\value{
a remote data frame
}
\description{
Maps an SQL table as a remote data frame in R, allowing R to run queries on
the the server.
}
\details{
Use this in place of loading a table into R. It will be treated as an R data
frame but the data will remain on the server (instead of in R memory).

The same \code{db_connection} must be used for each remote table. Otherwise it is
not possible to join tables together. Tables from different databases on the
same SQL Server can be accessed by the same connection.
}
