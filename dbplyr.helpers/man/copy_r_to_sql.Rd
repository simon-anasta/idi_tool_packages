% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_dbplyr_write.R
\name{copy_r_to_sql}
\alias{copy_r_to_sql}
\title{Copy local R table to remote database}
\usage{
copy_r_to_sql(
  db_connection,
  db = "[]",
  schema = "[]",
  sql_table_name,
  r_table_name,
  OVERWRITE = FALSE
)
}
\arguments{
\item{db_connection}{the open connection to close.
Often created using \code{create_database_connection}.}

\item{db}{the name of the database. Can be different from the database used
when creating \code{db_connection} but must be on the same server. Warns if not
delimited in square brackets.}

\item{schema}{the name of the schema containing the Table or View. Warns if
not delimited in square brackets.}

\item{sql_table_name}{the name of the Table in SQL. Warns is not delimited
in square brackets.}

\item{r_table_name}{a data frame in R to be copied to the database.}

\item{OVERWRITE}{T/F should any existing table of the same name be deleted
first? Defaults to FALSE, and will error if a table with the same name
already exists.}
}
\value{
a connection to the new table (using \code{create_access_point})
}
\description{
There are several different ways to copy local R data frames onto a server.
As the inbuilt dbplyr \code{copy_to} function did not work with our setup (and
worse, caused errors/locking for other users) we implemented this apporach
using the DBI package.
}
